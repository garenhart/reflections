When would you want to use a remote repository rather than keeping all your work local?

	Remote repository is useful for sharing the work with others. But even if you are working alone remote repository is useful as a backup of your work. It also allows you access to your work from anywhere.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	
	When repository is shared with other people, you may end up pulling partial changes.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

	Forks are used on GitHub only for creating a copy of any repository.
	
	Clones copy either a remote (GitHub) or a local repository to a new local location.

	Branches are used either locally or remotely, usually to create a different verion or an experimental copy of the master repository.
	

What is the benefit of having a copy of the last known state of the remote stored locally?

	It is always a good idea to check out the latest copy of the remote to avoid merge conflicts. Storing local copy of latest state and committing and pushing changes in small chuncks make it much easier to maintain the source.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	Without using Git, GitHub (or any other version control) it would be harder to maintain larger projects, especially collaborating with other contributors. Without version control you must constantly make incremental backups of your work and make sure to keep the increments small.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

	Branches are useful for creating different versions, exerimenting without jeopardizing the main branch, or collaborating with other people.